#include "abstractcourbe.h"
#include <iostream>
//-------------------------------------------------------------------------
//-----------------------constructeur--------------------------------------
//-------------------------------------------------------------------------
AbstractCourbe::AbstractCourbe(int base ) : KernelObject()
{
    this->xpPred = new int (base);
    this->xpSuiv = new int (base);
    this->base   = new int (base);

}
//-------------------------------------------------------------------------
//------------------------Destructeur--------------------------------------
//-------------------------------------------------------------------------
AbstractCourbe::~AbstractCourbe() throw(){
    delete xpPred;
    delete xpSuiv;
    delete base;
}
//-------------------------------------------------------------------------
//------------------------fonction-----------------------------------------
//-------------------------------------------------------------------------
bool AbstractCourbe::isUpNextPalier(const int x){
    //std::cerr << x << "/" << this->getSuivXp() << std::endl;
    bool r = x >= this->getSuivXp();
    if(r){
        (*xpPred) = (*xpSuiv);
        (*xpSuiv) = this->calcXpNextLevel();
    }
    return r;
}
//-------------------------------------------------------------------------
int AbstractCourbe::getBase()const{
    return *base;
}
//-------------------------------------------------------------------------
int AbstractCourbe::getPredXp()const{
    return *xpPred;
}
//-------------------------------------------------------------------------
//------------------------private------------------------------------------
//-------------------------------------------------------------------------

//-------------------------------------------------------------------------
int AbstractCourbe::getSuivXp()const{
    return *xpSuiv;
}
